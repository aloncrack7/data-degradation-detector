name: Build, Test and Optionally Publish to PyPI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      publish_to_pypi:
        description: 'Publish to PyPI?'
        required: true
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'
      new_version:
        description: 'New version (leave empty to keep current)'
        required: false
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build pytest
        pip install -e .
    
    - name: Run tests
      run: |
        python -m pytest testing/ -v

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to_pypi == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Update version if specified
      if: github.event.inputs.new_version != ''
      run: |
        # Update version in pyproject.toml
        sed -i 's/version = "[^"]*"/version = "${{ github.event.inputs.new_version }}"/' pyproject.toml
        
        # Commit and push the version change
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pyproject.toml
        git commit -m "Bump version to ${{ github.event.inputs.new_version }}" || exit 0
        git push
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*

  check-for-publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create deployment suggestion
      run: |
        echo "âœ… Tests passed! Your code is ready for deployment."
        echo ""
        echo "ðŸš€ To publish to PyPI:"
        echo "1. Go to the Actions tab in your GitHub repository"
        echo "2. Click on 'Build, Test and Optionally Publish to PyPI'"
        echo "3. Click 'Run workflow'"
        echo "4. Choose 'true' for 'Publish to PyPI?'"
        echo "5. Optionally specify a new version number"
        echo "6. Click 'Run workflow'"
        echo ""
        echo "ðŸ“¦ Current version in pyproject.toml: $(grep 'version = ' pyproject.toml | cut -d'"' -f2)"
